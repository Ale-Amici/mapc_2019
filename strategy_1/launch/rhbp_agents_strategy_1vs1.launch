<launch>
    <arg name="agent_name" default="agentA2" />
    <!-- Enable custom logger configuration-->
    <env name="ROS_PYTHON_LOG_CONFIG_FILE" value="$(find strategy_1)/launch/python_logging.conf"/>

    <include file="$(find knowledge_base)/launch/knowledge_base_node.launch">
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA1" />
    </include>

    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA1" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA2" />
    </include>
    <!-->
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA2" />
    </include>-->
    <!--
    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA3" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA3" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA4" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA4" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA5" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA5" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA6" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA6" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA7" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA7" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA8" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA8" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA9" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA9" />
    </include>

    <include file="$(find mapc_ros_bridge)/launch/mapc_ros_bridge.launch">
        <arg name="agent_name" value="agentA10" />
    </include>
    <include file="$(find strategy_1)/launch/rhbp_agent.launch">
        <arg name="agent_name" value="agentA10" />
    </include>
    -->
    <group ns="$(arg agent_name)/rhbp_manager">
        <param name="situationBias" type="double" value="1.0" />
        <param name="predecessorBias" type="double" value="1.0" />
        <param name="successorBias" type="double" value="1.0" />
        <param name="conflictorBias" type="double" value="1.0" />
        <param name="goalBias" type="double" value="1.0" />
        <param name="planBias" type="double" value="1.0" />
        <param name="activationThreshold" type="double" value="7.0" />
        <param name="activationGoalPriority" type="bool" value="True"/>
        <param name="createLogFiles" type="bool" value="true"/>
        <param name="activation_algorithm" type="string" value="default"/>
        <param name="max_parallel_behaviours" type="int" value="1"/> <!--Comment or negative for unlimited-->
        <param name="plan_monitoring_all_sensor_changes_by_behaviours" type="bool" value="false"/>
        <param name="plan_monitoring_behaviour_missing_influence" type="bool" value="true"/>
        <param name="plan_monitoring_unexpected_behaviour_finished" type="bool" value="true"/>
    </group>
</launch>
